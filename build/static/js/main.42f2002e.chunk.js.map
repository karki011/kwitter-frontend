{"version":3,"sources":["redux/actionCreators/index.js","redux/actionCreators/constants/index.js","redux/actionCreators/auth.js","react/components/logo.png","redux/actionTypes/index.js","serviceWorker.js","react/HOCs/userIsAuthenticated.js","react/HOCs/userIsNotAuthenticated.js","react/HOCs/withAsyncAction.js","react/components/LoginForm.js","react/components/Menu.js","react/components/MessageTextBox.js","react/pages/index.js","react/pages/Home.js","react/pages/Profile.js","react/pages/NotFound.js","react/App.js","index.js","redux/index.js","redux/HORs/withAsyncReducer.js","redux/stateReducers/auth/login.js","redux/stateReducers/auth/logout.js","redux/stateReducers/index.js","redux/configureStore.js"],"names":["jsonHeaders","Accept","handleJsonResponse","res","ok","json","then","result","url","domain","login","loginData","dispatch","type","LOGIN","START","fetch","method","headers","body","JSON","stringify","SUCCESS","payload","catch","err","Promise","reject","FAIL","logout","getState","LOGOUT","token","auth","Authorization","message","module","exports","createActionTypes","actionName","ACTIONNAME","toUpperCase","Boolean","window","location","hostname","match","userIsAuthenticated","connectedRouterRedirect","redirectPath","authenticatedSelector","state","undefined","wrapperDisplayName","userIsNotAuthenticated","ownProps","username","allowRedirectBack","withAsyncAction","reducerName","actionCreatorName","component","makeError","Error","name","actionCreators","actionCreator","mapDispatchToProps","connect","loading","error","LoginForm","password","handleLogin","e","preventDefault","props","handleChange","setState","target","value","this","Fragment","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","logo","alt","avatar","Form","id","onSubmit","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","autoFocus","required","onChange","Button","disabled","React","Component","Menu","handleLogout","event","isAuthenticated","to","onClick","MessageTextBox","className","Field","control","TextArea","label","Home","path","Profile","NotFound","pathname","pages","App","Object","entries","map","routeName","routeObj","key","exact","ReactDOM","render","store","history","document","getElementById","navigator","serviceWorker","ready","registration","unregister","configureStore","withAsyncReducer","reducer","action","initialState","getInitStateFromStorage","storedState","parse","localStorage","getItem","keys","every","property","combineReducers","router","connectRouter","createBrowserHistory","basename","process","preloadedState","createStore","createRootReducer","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","subscribe","setItem"],"mappings":"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","file":"static/js/main.42f2002e.chunk.js","sourcesContent":["export * from \"./auth\";\nexport * from \"./users\";\nexport * from \"./messages\";\nexport * from \"./likes\";\n","export const domain = \"https://kwitter-api.herokuapp.com\";\n//export const domain = \"http://localhost:3000\";\n\nexport const jsonHeaders = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n};\n\nexport const handleJsonResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return res.json().then(result => {\n    throw result;\n  });\n};\n","import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { LOGIN, LOGOUT } from \"../actionTypes\";\n\nconst url = domain + \"/auth\";\n\nexport const login = loginData => dispatch => {\n  dispatch({\n    type: LOGIN.START\n  });\n\n  return fetch(url + \"/login\", {\n    method: \"POST\",\n    headers: jsonHeaders,\n    body: JSON.stringify(loginData)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LOGIN.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(dispatch({ type: LOGIN.FAIL, payload: err }));\n    });\n};\n\nexport const logout = () => (dispatch, getState) => {\n  dispatch({\n    type: LOGOUT.START\n  });\n\n  const token = getState().auth.login.result.token;\n\n  return fetch(url + \"/logout\", {\n    method: \"GET\",\n    headers: { Authorization: \"Bearer \" + token, ...jsonHeaders }\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LOGOUT.SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: LOGOUT.FAIL, payload: err.message })\n      );\n    });\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo.9eea9498.png\";","const createActionTypes = actionName => {\n  const ACTIONNAME = actionName.toUpperCase();\n  return {\n    START: ACTIONNAME + \".START\",\n    SUCCESS: ACTIONNAME + \".SUCCESS\",\n    FAIL: ACTIONNAME + \".FAIL\"\n  };\n};\n\nexport const LOGIN = createActionTypes(\"LOGIN\");\nexport const LOGOUT = createActionTypes(\"LOGOUT\");\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\n\nconst userIsAuthenticated = connectedRouterRedirect({\n  // The url to redirect user to if they fail\n  redirectPath: \"/\",\n  // If selector is true, wrapper will not redirect\n  // For example let's check that state contains user data\n  authenticatedSelector: state =>\n    state.auth &&\n    state.auth.login &&\n    state.auth.login.result &&\n    state.auth.login.result.token !== undefined,\n  // A nice display name for this check\n  wrapperDisplayName: \"UserIsAuthenticated\"\n});\n\nexport default userIsAuthenticated;\n","import { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\n\nconst userIsNotAuthenticated = connectedRouterRedirect({\n  // This sends the user either to the query param route if we have one, or to the landing page if none is specified and the user is already logged in\n  redirectPath: (state, ownProps) =>\n    `/profile/${state.auth &&\n      state.auth.login &&\n      state.auth.login.result &&\n      state.auth.login.result.username}`,\n  // This prevents us from adding the query parameter when we send the user away from the login page\n  allowRedirectBack: false,\n  // If selector is true, wrapper will not redirect\n  // So if there is no user data, then we show the page\n  authenticatedSelector: state =>\n    state.auth && state.auth.login && state.auth.login.result === null,\n  // A nice display name for this check\n  wrapperDisplayName: \"UserIsNotAuthenticated\"\n});\n\nexport default userIsNotAuthenticated;\n","import { connect } from \".\";\nimport * as actionCreators from \"../../redux\";\n\nconst withAsyncAction = (reducerName, actionCreatorName) => component => {\n  const makeError = message =>\n    new Error(\n      `${component.name} component: withAction: Failed to bind to action ${actionCreatorName}: ${message}`\n    );\n\n  if (!actionCreators[actionCreatorName]) {\n    throw makeError(\n      `${actionCreatorName} does not exist as an action creator function`\n    );\n  }\n\n  const mapStateToProps = state => {\n    if (!state[reducerName]) {\n      throw makeError(`${reducerName} does not exist as a redux reducer`);\n    }\n    if (state[reducerName][actionCreatorName] === undefined) {\n      throw makeError(\n        `${actionCreatorName} does not exist as a property in redux state.${reducerName}`\n      );\n    }\n    if (typeof state[reducerName][actionCreatorName] !== \"object\") {\n      throw makeError(\n        `${actionCreatorName} does not exist in redux state.${reducerName}.${actionCreatorName} as a javascript object with properties result, loading, and error`\n      );\n    }\n    const { loading, result, error } = state[reducerName][actionCreatorName];\n    if (typeof loading !== \"boolean\") {\n      throw makeError(\n        `${actionCreatorName} does not exist in redux state.${reducerName}.${actionCreatorName} with a loading property that is a boolean value`\n      );\n    }\n    if (result === undefined) {\n      throw makeError(\n        `${actionCreatorName} does not exist in redux state.${reducerName}.${actionCreatorName} with a result property`\n      );\n    }\n    if (error === undefined) {\n      throw makeError(\n        `${actionCreatorName} does not exist in redux state.${reducerName}.${actionCreatorName} with an error property`\n      );\n    }\n\n    return { ...state[reducerName][actionCreatorName] };\n  };\n\n  const actionCreator = actionCreators[actionCreatorName];\n  const mapDispatchToProps = { [actionCreatorName]: actionCreator };\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(component);\n};\n\nexport default withAsyncAction;\n","import React from 'react';\nimport { Spinner } from '.';\nimport { withAsyncAction } from '../HOCs';\nimport './LoginForm.css';\nimport logo from'./logo.png';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nclass LoginForm extends React.Component {\n\tstate = { username: '', password: '' };\n\n\thandleLogin = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.login(this.state);\n\t};\n\n\thandleChange = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { loading, error } = this.props;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\n\t\t\t<Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n\t\t\t\t<Grid.Column style={{ maxWidth: 450 }}>\n\t\t\t\t\t<Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          <Image src={logo} alt=\"logo\" avatar/> Log-in to your account\n\t\t\t\t\t</Header>\n\t\t\t\t\t<Form id=\"login-form\" onSubmit={this.handleLogin} size=\"large\">\n\t\t\t\t\t\t<Segment stacked>\n\t\t\t\t\t\t\t<Form.Input fluid icon=\"user\" iconPosition=\"left\" placeholder=\"Username\" type=\"text\" name=\"username\" autoFocus required onChange={this.handleChange}/>\n\t\t\t\t\t\t\t<Form.Input fluid icon=\"lock\" iconPosition=\"left\" placeholder=\"Password\" type=\"password\" name=\"password\" required onChange={this.handleChange} />\n\n\t\t\t\t\t\t\t<Button type=\"submit\" disabled={loading} color=\"teal\" fluid size=\"large\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t</Form>\n          {loading && <Spinner name=\"circle\" color=\"blue\" />}\n          {error && <p style={{ color: 'red' }}>{error.message}</p>}\n\t\t\t\t\t\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n      </React.Fragment>\n\t\t);\n\t}\n}\n\nexport default withAsyncAction('auth', 'login')(LoginForm);\n","import React from \"react\";\nimport { Link } from \".\";\nimport \"./Menu.css\";\nimport { withAsyncAction } from \"../HOCs\";\n\nclass Menu extends React.Component {\n  handleLogout = event => {\n    event.preventDefault();\n    this.props.logout();\n  };\n\n  render() {\n    return (\n      <div id=\"menu\">\n        <h1>Kwitter</h1>\n        {this.props.isAuthenticated && (\n          <div id=\"menu-links\">\n            <Link to=\"/messagefeed\">Message Feed</Link>\n            <Link to=\"/\" onClick={this.handleLogout}>\n              Logout\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withAsyncAction(\"auth\", \"logout\")(Menu);\n","import React, { Component } from 'react';\nimport { Form, TextArea, Button } from 'semantic-ui-react';\nimport './MessageTextBox.css';\n\nclass MessageTextBox extends Component {\n\tstate = {};\n\n\trender() {\n\t\treturn (\n\t\t\t<Form className=\"form-control\">\n\t\t\t\t<Form.Field control={TextArea} label=\"Create Post\" placeholder=\"What's on your mind? \" />\n\t\t\t\t<Form.Field className=\"postBtn\" control={Button}>\n\t\t\t\t\tPost\n\t\t\t\t</Form.Field>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nexport default MessageTextBox;\n","import Home from \"./Home\";\nimport Profile from \"./Profile\";\nimport NotFound from \"./NotFound\";\n\nexport default {\n  Home: { path: \"/\", component: Home },\n  Profile: { path: \"/profile/:username\", component: Profile },\n  NotFound: { path: \"*\", component: NotFound }\n};\n","import React from \"react\";\nimport { LoginForm } from \"../components\";\nimport { userIsNotAuthenticated } from \"../HOCs\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <>\n        <LoginForm />\n      </>\n    );\n  }\n}\n\nexport default userIsNotAuthenticated(Home);\n","import React from \"react\";\nimport { Menu, MessageTextBox } from \"../components\";\nimport { userIsAuthenticated } from \"../HOCs\";\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <>\n        <Menu isAuthenticated={this.props.isAuthenticated} />\n        <h2>Profile</h2>\n        <MessageTextBox />\n      </>\n    );\n  }\n}\n\nexport default userIsAuthenticated(Profile);\n","import React from \"react\";\nimport { Link } from \"../components\";\nimport pages from \"../pages\";\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <>\n        <p>Page not found for {this.props.location.pathname}</p>\n        <Link to={pages.Home.path}>Go Home</Link>\n      </>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { Switch, Route } from \"./components\";\nimport pages from \"./pages\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        {Object.entries(pages).map(([routeName, routeObj]) => (\n          <Route\n            key={routeName}\n            exact\n            path={routeObj.path}\n            component={routeObj.component}\n          />\n        ))}\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { App } from './react';\nimport { store, history } from './redux';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ConnectedRouter history={history}>\n\t\t\t<App />\n\t\t</ConnectedRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import configureStore from \"./configureStore\";\n\nexport * from \"./actionCreators\";\nexport { history } from \"./configureStore\";\nexport const store = configureStore({});\n","const withAsyncReducer = ({ START, SUCCESS, FAIL }, reducer) => {\n  return (state, action) => {\n    switch (action.type) {\n      case START:\n        return {\n          ...state,\n          loading: true,\n          error: null\n        };\n      case SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          result: action.payload\n        };\n      case FAIL:\n        return {\n          ...state,\n          loading: false,\n          error: action.payload\n        };\n      default:\n        return reducer(state, action);\n    }\n  };\n};\n\nexport default withAsyncReducer;\n","import { LOGIN, LOGOUT } from \"../../actionTypes\";\nimport { withAsyncReducer } from \"../../HORs\";\n\nconst initialState = {\n  result: null,\n  loading: false,\n  error: null\n};\n\nconst getInitStateFromStorage = (key, initialState) => {\n  const storedState = JSON.parse(localStorage.getItem(key));\n\n  if (storedState) {\n    const unchangedInitialStateProps =\n      Object.keys(storedState).every(\n        property => initialState[property] !== undefined\n      ) &&\n      Object.keys(initialState).every(\n        property => storedState[property] !== undefined\n      );\n    if (unchangedInitialStateProps) {\n      return storedState;\n    }\n  }\n  return initialState;\n};\n\nconst login = (\n  state = getInitStateFromStorage(\"login\", initialState),\n  action\n) => {\n  switch (action.type) {\n    case LOGOUT.SUCCESS:\n      return { ...initialState };\n    default:\n      return state;\n  }\n};\n\nexport default withAsyncReducer(LOGIN, login);\n","import { LOGOUT } from \"../../actionTypes\";\nimport { withAsyncReducer } from \"../../HORs\";\n\nconst initialState = {\n  result: null,\n  loading: false,\n  error: null\n};\n\nconst logout = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default withAsyncReducer(LOGOUT, logout);\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport * as auth from \"./auth\";\n\nexport default history =>\n  combineReducers({\n    router: connectRouter(history),\n    auth: combineReducers(auth)\n  });\n","import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./stateReducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    composeWithDevTools(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        thunk\n        // ... other middlewares ...\n      )\n    )\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"login\", JSON.stringify(store.getState().auth.login));\n  });\n\n  return store;\n}\n"],"sourceRoot":""}